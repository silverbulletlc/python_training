# 实例069：报数
# 题目：有n个人围成一圈，顺序排号。从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。
# 程序分析：无。
if __name__ == '__main__':
    nmax = 50
    n = int(input('请输入总人数:'))
    num = []
    for i in range(n):
        num.append(i + 1)
 
    i = 0 # 数列序号
    k = 0 # 1~3计数，从0开始，到3归0，再一个个计数
    m = 0 # 循环控制次数（退出的人数）
 
    while m < n - 1:
        # 判断如果这个位置不等于0，代表没有退出，k继续计数+1
        if num[i]!=0:
            k+=1
        # 判断如果这个时候，是k数到3了
        if k==3:
            num[i]=0 # 这个位置清零，意味着退出
            k=0 # 归0重新数
            m+=1 # 记录退出数+1
        i+=1
        # 判断如果循环一圈了，重新从头在来
        if i==n:
            i=0
 
    i=0
    while num[i]==0:
        i+=1
    print(num[i])


# 自己重新写一遍巩固一下
list=[]
n=int(input('请输入一共多少人，正整数>3：'))
for j in range(n):
    list.append(j+1)

i=0 # 表示序列的序号
k=0 # 表示1~3数数，到3后归0，重新数
num=0 # 用来统计退出的人数

while num<n-1:
    if list[i]!=0: # 现在这个位置的人如果没有退出
        k+=1 # k继续数
    if k==3: # 如果k数到3
        k=0 # 归0重新数
        list[i]=0 # 这个位置的人退出
        num+=1 # 退出的人数计数
    i+=1 # 要先循环计数，然后马上判断是否到头了，避免序列溢出
    if i==n: # 如果一圈数完了
        i=0 # 重新开始继续数（避免序列溢出）
j=0
while list[j]==0: # 循环去找剩下的那个没有退出的人
    j+=1
print(j+1) # 序列从0开始，和人员序号相差1